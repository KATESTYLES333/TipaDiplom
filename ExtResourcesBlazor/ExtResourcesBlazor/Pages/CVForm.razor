@page "/CVs/{id}"
@using Syncfusion.Blazor.PdfViewerServer
@using Syncfusion.Blazor.DocumentEditor
@using Syncfusion.Blazor.Buttons
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment _appEnvironment
@using System.IO
@using Newtonsoft.Json
@inject DataModel.IResourceRepository Service


@if (IsPdf)
{
    <SfPdfViewerServer DocumentPath="@Path" Height="700px" Width="1060px"></SfPdfViewerServer>
}
else
{
    <SfDocumentEditorContainer @ref="container" Height="650px" Width="1230px">
        <DocumentEditorContainerEvents Created="OnCreated"></DocumentEditorContainerEvents>
    </SfDocumentEditorContainer>
}

@code
{

    [Parameter]
    public string Id { get; set; }
    // [Parameter]
    // public string FileType { get; set; }
    public string Path { get; set; }
    public bool IsPdf { get; set; }
    SfDocumentEditorContainer container;
    public Resource Resource { get; set; } = new Resource();

    protected override async Task OnInitializedAsync()
    {
        Resource = await Service.GetResource(Guid.Parse(Id));

        if (Resource != null)
        {
            Path = @$"D:\DIPLOM\ExtResourcesBlazor\ExtResourcesBlazor\wwwroot\Files\{Resource.CvtoolLinkMaster}";

            var file = Resource.CvtoolLinkMaster.Split('.')[1];

            if (file == "pdf")
            {
                IsPdf = true;
            }
            else
            {
                IsPdf = false;
            }
        }
    }


    private void OnCreated()
    {
        Path = @$"D:\DIPLOM\ExtResourcesBlazor\ExtResourcesBlazor\wwwroot\Files\{Resource.CvtoolLinkMaster}";


        using (System.IO.FileStream fileStream = new System.IO.FileStream(Path, System.IO.FileMode.Open, System.IO.FileAccess.Read))
        {
            WordDocument document = WordDocument.Load(fileStream, ImportFormatType.Docx);
            container.GetDocumentEditor().Open(JsonConvert.SerializeObject(document));
            document.Dispose();
        }

    }
}
